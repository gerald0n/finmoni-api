import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { AppModule } from './app.module';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
    }),
  );

  app.enableCors();

  const config = new DocumentBuilder()
    .setTitle('FinMoni API')
    .setDescription('API para gestÃ£o financeira colaborativa com workspaces')
    .setVersion('1.0')
    .addTag('Auth', 'Endpoints de autenticaÃ§Ã£o')
    .addTag('Workspaces', 'Gerenciamento de workspaces')
    .addTag('Accounts', 'Contas bancÃ¡rias dentro de workspaces')
    .addTag('Invites', 'Sistema de convites para workspaces')
    .addTag('Members', 'Gerenciamento de membros')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'JWT',
        description: 'Enter JWT token',
        in: 'header',
      },
      'JWT-auth',
    )
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
    },
  });

  const port = process.env.PORT || 3000;
  await app.listen(port);

  console.log(`ðŸš€ Application is running on: http://localhost:${port}`);
  console.log(`ðŸ“š Swagger documentation: http://localhost:${port}/api`);
}
bootstrap();
